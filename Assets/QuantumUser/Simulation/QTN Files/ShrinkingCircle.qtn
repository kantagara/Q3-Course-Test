
singleton component ShrinkingCircle
{
    //All the possible states
    AssetRef<ShrinkingCircleConfig> ShrinkingCircleConfig;
    ShrinkingCircleState CurrentState;
    //CurrentTime to next state
    FP CurrentTime;
    //Current radius that is shrinking
    FP CurrentRadius;
    //Target radius we're shrinking towards
    FP TargetRadius;
    //Initial radius - used to easily lerp towards the target radius once the shrinking state starts.
    FP InitialRadius;
    byte CurrentIndex;
    //Used for accurately lerping towards the target radius
    FP ShrinkingCircleTime;
    FPVector2 Position;
}

component ShrinkingCircleState
{
    FP TimeToNextState;
    CircleStateUnion CircleStateUnion;
}

union CircleStateUnion
{
    InitialState InitialState;
    PreShrinkState PreShrinkState;
    CooldownState CooldownState;
    ShrinkState ShrinkState;
}

struct InitialState
{
    FP InitialRadius;

}

struct PreShrinkState
{
    FP TargetRadius;
}

struct ShrinkState
{
}

struct CooldownState
{
}


event CircleChangedState
{
    
}